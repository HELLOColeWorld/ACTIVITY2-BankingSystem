
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author enric
 */
public class BankingSystem extends javax.swing.JFrame {

    /**
     * Creates new form BankingSystem
     */
    
    private double Savings = 100000.0;
    
    public BankingSystem() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jBWithdraw = new javax.swing.JButton();
        jBDeposit = new javax.swing.JButton();
        jBTransferMoney = new javax.swing.JButton();
        updateBalance = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jBWithdraw.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jBWithdraw.setText("WITHDRAW");
        jBWithdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBWithdrawActionPerformed(evt);
            }
        });

        jBDeposit.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jBDeposit.setText("DEPOSIT");
        jBDeposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDepositActionPerformed(evt);
            }
        });

        jBTransferMoney.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jBTransferMoney.setText("TRANSFER MONEY");
        jBTransferMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTransferMoneyActionPerformed(evt);
            }
        });

        updateBalance.setText("Account Balance: 100000.0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jBTransferMoney, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBWithdraw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBDeposit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(222, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(updateBalance)
                .addGap(63, 63, 63)
                .addComponent(jBWithdraw)
                .addGap(32, 32, 32)
                .addComponent(jBDeposit)
                .addGap(32, 32, 32)
                .addComponent(jBTransferMoney)
                .addContainerGap(250, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBWithdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBWithdrawActionPerformed
        // TODO add your handling code here:
        
         String input = JOptionPane.showInputDialog("Enter amount to withdraw:");
    if (input == null || input.isEmpty()) {
        return; // exit the method if the user clicks cancel or closes the dialog
    }

    try {
        double amountToWithdraw = Double.parseDouble(input);
        if (amountToWithdraw > 0) {
            if (amountToWithdraw <= Savings) {
                Savings -= amountToWithdraw;
                UpdatedBalance();
                JOptionPane.showMessageDialog(null, "Withdrawal from the account" + " 125001 " + "Successful." + "\n" + "Withdrawal Amount: " + amountToWithdraw + "\n" + "Current Balance: "+ Savings);
            } else {
                JOptionPane.showMessageDialog(null, "Insufficient funds!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid amount! Please enter a positive value.");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Invalid amount. Please enter a number.");
    }
    }//GEN-LAST:event_jBWithdrawActionPerformed

    private void jBDepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDepositActionPerformed
        // TODO add your handling code here:
         String input = JOptionPane.showInputDialog("Enter amount to deposit:");
    if (input == null || input.isEmpty()) {
        return; // exit the method if the user clicks cancel or closes the dialog
    }

    try {
        double amountToDeposit = Double.parseDouble(input);
        if (amountToDeposit > 0) {
            Savings += amountToDeposit;
            UpdatedBalance();
            JOptionPane.showMessageDialog(null, "Deposit successfully! to " + "125001" + "\n" + "Amount Deposited: " + amountToDeposit + "\n" + "Current Balance: "+ Savings);
        } else {
            JOptionPane.showMessageDialog(null, "Invalid amount! Please enter a positive value.");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Invalid amount. Please enter a number.");
    }
    }//GEN-LAST:event_jBDepositActionPerformed

    private void jBTransferMoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTransferMoneyActionPerformed
        // TODO add your handling code here:
        String BankToTransfer = JOptionPane.showInputDialog("Enter an Account number to transfer:");
         String input = JOptionPane.showInputDialog("Enter amount to transfer:");
    if (input == null || input.isEmpty()) {
        return; // exit the method if the user clicks cancel or closes the dialog
    }

    try {
        double amountToTransfer = Double.parseDouble(input);
        if (amountToTransfer <= Savings) {
            Savings -= amountToTransfer;
            UpdatedBalance();
            
            JOptionPane.showMessageDialog(null, "Transfer successful! to " + BankToTransfer + "\n" + "Amount transferred: " + amountToTransfer + "\n" + "Current Balance: "+ Savings);
            JOptionPane.showMessageDialog(null, "Transfer successful!");
        } else {
            JOptionPane.showMessageDialog(null, "Insufficient funds!");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Invalid amount. Please enter a number.");
    }
    }//GEN-LAST:event_jBTransferMoneyActionPerformed

    public void UpdatedBalance(){
    updateBalance.setText("Account Savings: " + Savings);
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BankingSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBDeposit;
    private javax.swing.JButton jBTransferMoney;
    private javax.swing.JButton jBWithdraw;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel updateBalance;
    // End of variables declaration//GEN-END:variables
}
